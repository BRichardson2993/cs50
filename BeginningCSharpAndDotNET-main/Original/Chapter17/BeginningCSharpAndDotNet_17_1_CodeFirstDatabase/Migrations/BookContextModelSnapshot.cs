// <auto-generated />
using System;
using BeginningCSharpAndDotNet_17_1_CodeFirstDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeginningCSharpAndDotNet_17_1_CodeFirstDatabase.Migrations
{
    [DbContext(typeof(BookContext))]
    partial class BookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeginningCSharpAndDotNet_17_1_CodeFirstDatabase.Book", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BeginningCSharpAndDotNet_17_1_CodeFirstDatabase.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemCode")
                        .HasColumnType("int");

                    b.Property<int>("OnHand")
                        .HasColumnType("int");

                    b.Property<int>("OnOrder")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("StockId");

                    b.HasIndex("ItemCode");

                    b.HasIndex("StoreId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("BeginningCSharpAndDotNet_17_1_CodeFirstDatabase.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("BeginningCSharpAndDotNet_17_1_CodeFirstDatabase.Stock", b =>
                {
                    b.HasOne("BeginningCSharpAndDotNet_17_1_CodeFirstDatabase.Book", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode");

                    b.HasOne("BeginningCSharpAndDotNet_17_1_CodeFirstDatabase.Store", null)
                        .WithMany("Inventory")
                        .HasForeignKey("StoreId");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("BeginningCSharpAndDotNet_17_1_CodeFirstDatabase.Store", b =>
                {
                    b.Navigation("Inventory");
                });
#pragma warning restore 612, 618
        }
    }
}
